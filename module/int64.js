function check_range(a){return-2147483648<=a&&4294967295>=a}function unhexlify(a){if("0x"===a.substring(0,2)&&(a=a.substring(2)),1==a.length%2&&(a="0"+a),1==a.length%2)throw TypeError("Invalid hex string");let b=new Uint8Array(a.length/2);for(let c=0;c<a.length;c+=2){let d=a.length-2-c,e=a.slice(d,d+2);b[c/2]=parseInt(e,16)}return b}function operation(a,b){return function(){if(arguments.length!==b)throw Error("Not enough arguments for function "+a.name);let c=[];for(let a=0;a<arguments.length;a++)c[a]=arguments[a]instanceof Int?arguments[a]:new Int(arguments[a]);return a.apply(this,c)}}class Int{constructor(a,b){let c=new Uint32Array(2),d=new Uint8Array(c.buffer);if(2<arguments.length)throw TypeError("Int takes at most 2 args");if(0===arguments.length)throw TypeError("Int takes at min 1 args");let e=!1;if(1===arguments.length&&(e=!0),!e&&"number"!=typeof a&&"number"!=typeof b)throw TypeError("low/high must be numbers");if("number"==typeof a){if(!check_range(a))throw TypeError("low not a valid value: "+a);if(e)b=0,0>a&&(b=-1);else if(!check_range(b))throw TypeError("high not a valid value: "+b);c[0]=a,c[1]=b}else if("string"==typeof a)d.set(unhexlify(a));else if("object"!=typeof a)throw TypeError("Int does not support your object for conversion");else if(a instanceof Int)d.set(a.bytes);else{if(8!==a.length)throw TypeError("Array must have exactly 8 elements.");d.set(a)}this.buffer=c,this.bytes=d,this.eq=operation(function(c){const b=this;return b.low()===c.low()&&b.high()===c.high()},1),this.neg=operation(function(){let a=this.constructor,b=~this.low(),c=~this.high(),d=new Int(b,c).add(1);return new a(d)},0),this.add=operation(function(a){let b=this.constructor,c=this.low(),d=this.high();c+=a.low();let e=0;return 4294967295<c&&(e=1),d+=e+a.high(),c&=4294967295,d&=4294967295,new b(c,d)},1),this.sub=operation(function(a){let c=this.constructor;a=a.neg();let d=this.low(),e=this.high();d+=a.low();let f=0;return 4294967295<d&&(f=1),e+=f+a.high(),d&=4294967295,e&=4294967295,new c(d,e)},1)}low(){return this.buffer[0]}high(){return this.buffer[1]}toString(a){if(!a){let a=this.low().toString(16).padStart(8,"0"),b=this.high().toString(16).padStart(8,"0");return"0x"+b+a}let b=this.high().toString(16).padStart(8,"0");b=b.substring(0,4)+"_"+b.substring(4);let c=this.low().toString(16).padStart(8,"0");return c=c.substring(0,4)+"_"+c.substring(4),"0x"+b+"_"+c}}Int.Zero=new Int(0),Int.One=new Int(1);