function make_buffer(a,b){const c=new Uint8Array(1001),d=mem.addrof(c),e=d.read64(view_m_vector),f=d.read32(view_m_length);d.write64(view_m_vector,a),d.write32(view_m_length,b);const g=new Uint8Array(c.length);g.set(c);const h=g.buffer;return d.write64(view_m_vector,e),d.write32(view_m_length,f),h}function check_magic_at(a,b){const c=[new Int([85,72,137,229,65,87,65,86]),new Int([65,85,65,84,83,80,72,141])],d=[new Int(32),new Int(1007940799,2)],e=b?c:d,f=[a.read64(0),a.read64(8)];return f[0].eq(e[0])&&f[1].eq(e[1])}function find_base(a,b,c){const d=16*KB;a=align(a,d);for(const e=(c?-1:1)*d;!0&&!check_magic_at(a,b);)a=a.add(e);return a}function get_view_vector(a){if(!ArrayBuffer.isView(a))throw TypeError(`object not a JSC::JSArrayBufferView: ${a}`);return mem.addrof(a).readp(view_m_vector)}function resolve_import(a){if(9727!==a.read16(0))throw Error(`instruction at ${a} is not of the form: jmp qword`+" [rip + X]");const b=a.read32(2),c=new Int(b,b>>31),d=a.readp(c.add(6));return d}function init_syscall_array(a,b,c){if("number"!=typeof c)throw TypeError(`max_search_size is not a number: ${c}`);if(0>c)throw Error(`max_search_size is less than 0: ${c}`);const d=make_buffer(b,c),e=new Uint8Array(d);let f=0,g=!1;for(let d=0;d<c;d++)if(114===e[d]&&100===e[d+1]&&108===e[d+2]&&111===e[d+3]){f=d,g=!0;break}if(!g)throw Error("\"rdlo\" string not found in libkernel_web, base address:"+` ${b}`);for(let d=0;d<f;d++)if(72===e[d]&&199===e[d+1]&&192===e[d+2]&&73===e[d+7]&&137===e[d+8]&&202===e[d+9]&&15===e[d+10]&&5===e[d+11]){const c=read32(e,d+3);a[c]=b.add(d),d+=11}}